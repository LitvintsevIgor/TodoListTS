[{"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/index.tsx":"1","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/reportWebVitals.ts":"2","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/api/todolists-api.ts":"3","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/store.ts":"4","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/App.tsx":"5","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/tasks-reducer.ts":"6","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/todolists-reducer.ts":"7","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/TodolistsList.tsx":"8","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Todolist.tsx":"9","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/AddItemForm/AddItemForm.tsx":"10","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Task/Task.tsx":"11","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/EditableSpan/EditableSpan.tsx":"12","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/app-reducer.ts":"13","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/ErrorSnackbar/ErrorSnackbar.tsx":"14","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/utils/error-utils.ts":"15","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/Login/Login.tsx":"16","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/Login/auth-reducer.ts":"17"},{"size":748,"mtime":1623323812724,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1607869388000,"results":"20","hashOfConfig":"19"},{"size":3088,"mtime":1623357073006,"results":"21","hashOfConfig":"19"},{"size":1401,"mtime":1624006785622,"results":"22","hashOfConfig":"19"},{"size":2628,"mtime":1623357222863,"results":"23","hashOfConfig":"19"},{"size":5603,"mtime":1624036411968,"results":"24","hashOfConfig":"19"},{"size":4474,"mtime":1624606608540,"results":"25","hashOfConfig":"19"},{"size":4045,"mtime":1624605769655,"results":"26","hashOfConfig":"19"},{"size":4193,"mtime":1596715250000,"results":"27","hashOfConfig":"19"},{"size":1595,"mtime":1596715562000,"results":"28","hashOfConfig":"19"},{"size":1773,"mtime":1596295538000,"results":"29","hashOfConfig":"19"},{"size":952,"mtime":1594154724000,"results":"30","hashOfConfig":"19"},{"size":1492,"mtime":1624604850712,"results":"31","hashOfConfig":"19"},{"size":1049,"mtime":1624047415514,"results":"32","hashOfConfig":"19"},{"size":715,"mtime":1624036458237,"results":"33","hashOfConfig":"19"},{"size":3373,"mtime":1623352775709,"results":"34","hashOfConfig":"19"},{"size":1883,"mtime":1624605814273,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d5um54",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/index.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/reportWebVitals.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/api/todolists-api.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/store.ts",["72","73"],"import {tasksReducer} from '../features/TodolistsList/tasks-reducer';\r\nimport {todolistsReducer} from '../features/TodolistsList/todolists-reducer';\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer'\r\nimport {authReducer} from \"../features/Login/auth-redicer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    tasks: tasksReducer,\r\n    todolists: todolistsReducer,\r\n    app: appReducer,\r\n    auth: authReducer\r\n})\r\n// непосредственно создаём store\r\n// export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport const store =configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})\r\n\r\n\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/App.tsx",["74"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/tasks-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/todolists-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/TodolistsList.tsx",["75","76","77","78","79","80","81","82"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Todolist.tsx",["83","84","85","86","87","88"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/AddItemForm/AddItemForm.tsx",["89","90","91"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Task/Task.tsx",["92","93","94"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/EditableSpan/EditableSpan.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/app-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/ErrorSnackbar/ErrorSnackbar.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/utils/error-utils.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/Login/Login.tsx",["95"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/Login/auth-reducer.ts",["96"],{"ruleId":"97","severity":1,"message":"98","line":3,"column":9,"nodeType":"99","messageId":"100","endLine":3,"endColumn":24},{"ruleId":"97","severity":1,"message":"101","line":3,"column":43,"nodeType":"99","messageId":"100","endLine":3,"endColumn":54},{"ruleId":"102","severity":1,"message":"103","line":27,"column":8,"nodeType":"104","endLine":27,"endColumn":10,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":37,"column":8,"nodeType":"104","endLine":37,"endColumn":10,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"108","line":42,"column":8,"nodeType":"104","endLine":42,"endColumn":10,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"108","line":47,"column":8,"nodeType":"104","endLine":47,"endColumn":10,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"108","line":52,"column":8,"nodeType":"104","endLine":52,"endColumn":10,"suggestions":"111"},{"ruleId":"102","severity":1,"message":"108","line":57,"column":8,"nodeType":"104","endLine":57,"endColumn":10,"suggestions":"112"},{"ruleId":"102","severity":1,"message":"108","line":62,"column":8,"nodeType":"104","endLine":62,"endColumn":10,"suggestions":"113"},{"ruleId":"102","severity":1,"message":"108","line":67,"column":8,"nodeType":"104","endLine":67,"endColumn":10,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"108","line":72,"column":8,"nodeType":"104","endLine":72,"endColumn":10,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"116","line":35,"column":8,"nodeType":"104","endLine":35,"endColumn":10,"suggestions":"117"},{"ruleId":"102","severity":1,"message":"118","line":39,"column":8,"nodeType":"104","endLine":39,"endColumn":42,"suggestions":"119"},{"ruleId":"102","severity":1,"message":"118","line":46,"column":8,"nodeType":"104","endLine":46,"endColumn":54,"suggestions":"120"},{"ruleId":"102","severity":1,"message":"118","line":48,"column":95,"nodeType":"104","endLine":48,"endColumn":134,"suggestions":"121"},{"ruleId":"102","severity":1,"message":"118","line":49,"column":101,"nodeType":"104","endLine":49,"endColumn":140,"suggestions":"122"},{"ruleId":"102","severity":1,"message":"118","line":50,"column":107,"nodeType":"104","endLine":50,"endColumn":146,"suggestions":"123"},{"ruleId":"97","severity":1,"message":"124","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":12},{"ruleId":"97","severity":1,"message":"125","line":2,"column":14,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"126","line":2,"column":22,"nodeType":"99","messageId":"100","endLine":2,"endColumn":33},{"ruleId":"102","severity":1,"message":"118","line":15,"column":97,"nodeType":"104","endLine":15,"endColumn":130,"suggestions":"127"},{"ruleId":"102","severity":1,"message":"118","line":20,"column":8,"nodeType":"104","endLine":20,"endColumn":41,"suggestions":"128"},{"ruleId":"102","severity":1,"message":"118","line":24,"column":8,"nodeType":"104","endLine":24,"endColumn":41,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":59,"column":32,"nodeType":"132","endLine":59,"endColumn":49},{"ruleId":"97","severity":1,"message":"133","line":6,"column":31,"nodeType":"99","messageId":"100","endLine":6,"endColumn":45},"@typescript-eslint/no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["135"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["136"],["137"],["138"],["139"],["140"],["141"],["142"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["143"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["144"],["145"],["146"],["147"],["148"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.",["149"],["150"],["151"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'setTodolistsAC' is defined but never used.",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"152","fix":"156"},{"desc":"152","fix":"157"},{"desc":"152","fix":"158"},{"desc":"152","fix":"159"},{"desc":"152","fix":"160"},{"desc":"152","fix":"161"},{"desc":"152","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"165","fix":"168"},{"desc":"165","fix":"169"},{"desc":"165","fix":"170"},{"desc":"165","fix":"171"},{"desc":"165","fix":"172"},{"desc":"165","fix":"173"},"Update the dependencies array to be: [dispatch]",{"range":"174","text":"175"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"176","text":"177"},{"range":"178","text":"175"},{"range":"179","text":"175"},{"range":"180","text":"175"},{"range":"181","text":"175"},{"range":"182","text":"175"},{"range":"183","text":"175"},{"range":"184","text":"175"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"185","text":"186"},"Update the dependencies array to be: [props]",{"range":"187","text":"188"},{"range":"189","text":"188"},{"range":"190","text":"188"},{"range":"191","text":"188"},{"range":"192","text":"188"},{"range":"193","text":"188"},{"range":"194","text":"188"},{"range":"195","text":"188"},[1257,1259],"[dispatch]",[1328,1330],"[demo, dispatch, isLoggedIn]",[1499,1501],[1670,1672],[1875,1877],[2088,2090],[2303,2305],[2450,2452],[2629,2631],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[765,798],[1071,1104],[1261,1294]]