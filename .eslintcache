[{"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/index.tsx":"1","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/reportWebVitals.ts":"2","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/api/todolists-api.ts":"3","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/store.ts":"4","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/App.tsx":"5","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/tasks-reducer.ts":"6","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/todolists-reducer.ts":"7","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/TodolistsList.tsx":"8","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Todolist.tsx":"9","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/AddItemForm/AddItemForm.tsx":"10","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Task/Task.tsx":"11","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/EditableSpan/EditableSpan.tsx":"12","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/app-reducer.ts":"13","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/ErrorSnackbar/ErrorSnackbar.tsx":"14","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/utils/error-utils.ts":"15","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/Login/Login.tsx":"16","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/Login/auth-reducer.ts":"17","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/stories/Button.stories.tsx":"18","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/stories/Page.tsx":"19","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/AddItemForm/AddItemForm.stories.tsx":"20","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Task/Task.stories.tsx":"21","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/EditableSpan/EditableSpan.stories.tsx":"22","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/App.stories.tsx":"23","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/stories/decorators/ReduxStoreProviderDecorator.tsx":"24"},{"size":748,"mtime":1623323812724,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1607869388000,"results":"27","hashOfConfig":"26"},{"size":3088,"mtime":1623357073006,"results":"28","hashOfConfig":"26"},{"size":1401,"mtime":1624604850762,"results":"29","hashOfConfig":"26"},{"size":2536,"mtime":1624950567214,"results":"30","hashOfConfig":"26"},{"size":5203,"mtime":1624944370114,"results":"31","hashOfConfig":"26"},{"size":4474,"mtime":1624606608540,"results":"32","hashOfConfig":"26"},{"size":4045,"mtime":1624605769655,"results":"33","hashOfConfig":"26"},{"size":4193,"mtime":1596715250000,"results":"34","hashOfConfig":"26"},{"size":1595,"mtime":1596715562000,"results":"35","hashOfConfig":"26"},{"size":1773,"mtime":1596295538000,"results":"36","hashOfConfig":"26"},{"size":952,"mtime":1594154724000,"results":"37","hashOfConfig":"26"},{"size":1998,"mtime":1624946663538,"results":"38","hashOfConfig":"26"},{"size":1049,"mtime":1624047415514,"results":"39","hashOfConfig":"26"},{"size":715,"mtime":1624036458237,"results":"40","hashOfConfig":"26"},{"size":3373,"mtime":1623352775709,"results":"41","hashOfConfig":"26"},{"size":1883,"mtime":1624605814273,"results":"42","hashOfConfig":"26"},{"size":804,"mtime":1624947967421,"results":"43","hashOfConfig":"26"},{"size":2415,"mtime":1624947967431,"results":"44","hashOfConfig":"26"},{"size":534,"mtime":1624948615744,"results":"45","hashOfConfig":"26"},{"size":1486,"mtime":1624949402852,"results":"46","hashOfConfig":"26"},{"size":364,"mtime":1624949591835,"results":"47","hashOfConfig":"26"},{"size":357,"mtime":1624950205256,"results":"48","hashOfConfig":"26"},{"size":2346,"mtime":1624950104269,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d5um54",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/index.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/reportWebVitals.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/api/todolists-api.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/store.ts",["102","103"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/App.tsx",["104","105"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/tasks-reducer.ts",[],["106","107"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/todolists-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/TodolistsList.tsx",["108","109","110","111","112","113","114","115"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC({id: todolistId, filter: value})\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Todolist.tsx",["116","117","118","119","120","121"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/AddItemForm/AddItemForm.tsx",["122","123","124"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Task/Task.tsx",["125","126","127"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/EditableSpan/EditableSpan.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/app-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/ErrorSnackbar/ErrorSnackbar.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/utils/error-utils.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/Login/Login.tsx",["128"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/Login/auth-reducer.ts",["129"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/stories/Button.stories.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/stories/Page.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/AddItemForm/AddItemForm.stories.tsx",["130"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/features/TodolistsList/Todolist/Task/Task.stories.tsx",["131"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/components/EditableSpan/EditableSpan.stories.tsx",["132"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/app/App.stories.tsx",["133"],"/Users/igorlitvintsev/frontend/it-incubator/projects/TodoListTS/src/stories/decorators/ReduxStoreProviderDecorator.tsx",["134","135"],{"ruleId":"136","severity":1,"message":"137","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":24},{"ruleId":"136","severity":1,"message":"140","line":3,"column":43,"nodeType":"138","messageId":"139","endLine":3,"endColumn":54},{"ruleId":"141","severity":1,"message":"142","line":35,"column":8,"nodeType":"143","endLine":35,"endColumn":10,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":39,"column":8,"nodeType":"143","endLine":39,"endColumn":10,"suggestions":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"141","severity":1,"message":"151","line":37,"column":8,"nodeType":"143","endLine":37,"endColumn":10,"suggestions":"152"},{"ruleId":"141","severity":1,"message":"145","line":42,"column":8,"nodeType":"143","endLine":42,"endColumn":10,"suggestions":"153"},{"ruleId":"141","severity":1,"message":"145","line":47,"column":8,"nodeType":"143","endLine":47,"endColumn":10,"suggestions":"154"},{"ruleId":"141","severity":1,"message":"145","line":52,"column":8,"nodeType":"143","endLine":52,"endColumn":10,"suggestions":"155"},{"ruleId":"141","severity":1,"message":"145","line":57,"column":8,"nodeType":"143","endLine":57,"endColumn":10,"suggestions":"156"},{"ruleId":"141","severity":1,"message":"145","line":62,"column":8,"nodeType":"143","endLine":62,"endColumn":10,"suggestions":"157"},{"ruleId":"141","severity":1,"message":"145","line":67,"column":8,"nodeType":"143","endLine":67,"endColumn":10,"suggestions":"158"},{"ruleId":"141","severity":1,"message":"145","line":72,"column":8,"nodeType":"143","endLine":72,"endColumn":10,"suggestions":"159"},{"ruleId":"141","severity":1,"message":"160","line":35,"column":8,"nodeType":"143","endLine":35,"endColumn":10,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"162","line":39,"column":8,"nodeType":"143","endLine":39,"endColumn":42,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"162","line":46,"column":8,"nodeType":"143","endLine":46,"endColumn":54,"suggestions":"164"},{"ruleId":"141","severity":1,"message":"162","line":48,"column":95,"nodeType":"143","endLine":48,"endColumn":134,"suggestions":"165"},{"ruleId":"141","severity":1,"message":"162","line":49,"column":101,"nodeType":"143","endLine":49,"endColumn":140,"suggestions":"166"},{"ruleId":"141","severity":1,"message":"162","line":50,"column":107,"nodeType":"143","endLine":50,"endColumn":146,"suggestions":"167"},{"ruleId":"136","severity":1,"message":"168","line":2,"column":9,"nodeType":"138","messageId":"139","endLine":2,"endColumn":12},{"ruleId":"136","severity":1,"message":"169","line":2,"column":14,"nodeType":"138","messageId":"139","endLine":2,"endColumn":20},{"ruleId":"136","severity":1,"message":"170","line":2,"column":22,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"141","severity":1,"message":"162","line":15,"column":97,"nodeType":"143","endLine":15,"endColumn":130,"suggestions":"171"},{"ruleId":"141","severity":1,"message":"162","line":20,"column":8,"nodeType":"143","endLine":20,"endColumn":41,"suggestions":"172"},{"ruleId":"141","severity":1,"message":"162","line":24,"column":8,"nodeType":"143","endLine":24,"endColumn":41,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":59,"column":32,"nodeType":"176","endLine":59,"endColumn":49},{"ruleId":"136","severity":1,"message":"177","line":6,"column":31,"nodeType":"138","messageId":"139","endLine":6,"endColumn":45},{"ruleId":"178","severity":1,"message":"179","line":5,"column":1,"nodeType":"180","endLine":8,"endColumn":2},{"ruleId":"178","severity":1,"message":"179","line":7,"column":1,"nodeType":"180","endLine":10,"endColumn":2},{"ruleId":"178","severity":1,"message":"179","line":5,"column":1,"nodeType":"180","endLine":8,"endColumn":2},{"ruleId":"178","severity":1,"message":"179","line":6,"column":1,"nodeType":"180","endLine":10,"endColumn":2},{"ruleId":"181","severity":1,"message":"182","line":24,"column":9,"nodeType":"183","messageId":"184","endLine":29,"endColumn":10,"fix":"185"},{"ruleId":"181","severity":1,"message":"186","line":30,"column":9,"nodeType":"183","messageId":"184","endLine":35,"endColumn":10,"fix":"187"},"@typescript-eslint/no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["188"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["189"],"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["192"],["193"],["194"],["195"],["196"],["197"],["198"],["199"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["200"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["201"],["202"],["203"],["204"],["205"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.",["206"],["207"],["208"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'setTodolistsAC' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-computed-key","Unnecessarily computed property [\"todolistId1\"] found.","Property","unnecessarilyComputedProperty",{"range":"209","text":"210"},"Unnecessarily computed property [\"todolistId2\"] found.",{"range":"211","text":"212"},{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"213","fix":"218"},{"desc":"213","fix":"219"},{"desc":"213","fix":"220"},{"desc":"213","fix":"221"},{"desc":"213","fix":"222"},{"desc":"213","fix":"223"},{"desc":"213","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"227","fix":"229"},{"desc":"227","fix":"230"},{"desc":"227","fix":"231"},{"desc":"227","fix":"232"},{"desc":"227","fix":"233"},{"desc":"227","fix":"234"},{"desc":"227","fix":"235"},[989,1004],"\"todolistId1\"",[1464,1479],"\"todolistId2\"","Update the dependencies array to be: [dispatch]",{"range":"236","text":"237"},{"range":"238","text":"237"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"239","text":"240"},{"range":"241","text":"237"},{"range":"242","text":"237"},{"range":"243","text":"237"},{"range":"244","text":"237"},{"range":"245","text":"237"},{"range":"246","text":"237"},{"range":"247","text":"237"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"248","text":"249"},"Update the dependencies array to be: [props]",{"range":"250","text":"251"},{"range":"252","text":"251"},{"range":"253","text":"251"},{"range":"254","text":"251"},{"range":"255","text":"251"},{"range":"256","text":"251"},{"range":"257","text":"251"},{"range":"258","text":"251"},[1240,1242],"[dispatch]",[1331,1333],[1328,1330],"[demo, dispatch, isLoggedIn]",[1499,1501],[1670,1672],[1875,1877],[2088,2090],[2303,2305],[2450,2452],[2629,2631],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[765,798],[1071,1104],[1261,1294]]